C51 COMPILER V9.59.0.0   77_SEGMENT_DISPLAY                                                11/18/2023 16:16:53 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE 77_SEGMENT_DISPLAY
OBJECT MODULE PLACED IN .\Objects\77_Segment_Display.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE 77_Segment_Display.C OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.
                    -\Listings\77_Segment_Display.lst) TABS(2) OBJECT(.\Objects\77_Segment_Display.obj)

line level    source

   1          //including required lib's
   2          #include <REGX51.H>
   3          
   4          //sbit decleration
   5          sbit segment_unit = P3^6;
   6          sbit segment_tens = P3^7;
   7          
   8          //forward decleration of user defined funcations
   9          void delay(unsigned int);                                                                       //delay funcation proto-type
  10          
  11          //main funcation
  12          void main()
  13          {
  14   1        //decleration and initi. of local variables
  15   1        int segment_data[10] = {0xC0, 0xF9, 0xA4, 0xB0, 0x99, 0x92, 0x82, 0xF8, 0x80, 0x90};
  16   1        int count = 0, delayer;
  17   1        
  18   1        segment_unit = 0;
  19   1        segment_tens = 0;
  20   1        
  21   1        //forever loop
  22   1        while(1)                                                                                      //or we can use for(;;)
  23   1        {
  24   2          for(; count <= 99; count++)                                                                 //for loop to specify start and end of the c
             -ount
  25   2          {
  26   3            for(delayer = 0; delayer < 50; delayer++)                                                 //for loop to minimize flikering effe
             -ct
  27   3            {
  28   4              if(count >= 0 && count <= 99)
  29   4              {
  30   5                P1 = segment_data[count % 10];                                                        //(count%10) will work as index for segment
             -_data array and its value will assign to P1
  31   5                segment_unit = 1;                                                                     //seg.unit is on
  32   5                segment_tens = 0;                                                                     //seg.tens is off
  33   5                delay(1);                                                                             //calling delay with 2
  34   5                
  35   5                P1 = segment_data[count / 10];                                                        //(count/10) will work as index for segment
             -_data array and its value will assign to P1
  36   5                segment_unit = 0;                                                                     //seg.unit is off
  37   5                segment_tens = 1;                                                                     //seg.tens is on
  38   5                delay(1);                                                                             //calling delay with 2
  39   5              }
  40   4            }
  41   3          }
  42   2        }
  43   1      }
  44          
  45          
  46          //funcation defination of user defined funcation
  47          void delay(unsigned int time)                                       //delay funcation with one parameter called time
  48          {
  49   1        unsigned int i,j;                                                 //decleration of variables inside the funcation
  50   1        {
C51 COMPILER V9.59.0.0   77_SEGMENT_DISPLAY                                                11/18/2023 16:16:53 PAGE 2   

  51   2          for(i = 0; i < time; i++)                                       //for loop
  52   2          {
  53   3            for(j = 0; j < 300; j++);                                   //nested for loop
  54   3          }
  55   2        }
  56   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    194    ----
   CONSTANT SIZE    =     20    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      24
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
