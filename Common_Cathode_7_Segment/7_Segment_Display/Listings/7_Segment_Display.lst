C51 COMPILER V9.59.0.0   7_SEGMENT_DISPLAY                                                 11/18/2023 12:31:51 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE 7_SEGMENT_DISPLAY
OBJECT MODULE PLACED IN .\Objects\7_Segment_Display.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE 7_Segment_Display.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\
                    -Listings\7_Segment_Display.lst) TABS(2) OBJECT(.\Objects\7_Segment_Display.obj)

line level    source

   1          //including required lib's
   2          #include<reg51.h>
   3          
   4          
   5          //forward decleration of user defined funcations
   6          void delay(unsigned int);                                                             //delay funcation with one parameter
   7          
   8          //main funcation
   9          void main()
  10          {
  11   1        
  12   1        P1 = 0x00;
  13   1        
  14   1        //forever loop
  15   1        while(1)                                                                            //or we can use for(;;)                    
  16   1          {
  17   2            P1 = 0x3F;                                                                      //0x3F = 0
  18   2            delay(10);                                                                      //calling delay funcation with 10     
  19   2            
  20   2            P1 = 0x06;                                                                      //0x06 = 1
  21   2            delay(10);                                                                      //calling delay funcation with 10     
  22   2            
  23   2            P1 = 0x5B;                                                                      //0x5B = 2
  24   2            delay(10);                                                                      //calling delay funcation with 10     
  25   2            
  26   2            P1 = 0x4F;                                                                      //0x4F = 3
  27   2            delay(10);                                                                      //calling delay funcation with 10     
  28   2            
  29   2            P1 = 0x66;                                                                      //0x66 = 4
  30   2            delay(10);                                                                      //calling delay funcation with 10     
  31   2            
  32   2            P1 = 0x6D;                                                                      //0x6D = 5
  33   2            delay(10);                                                                      //calling delay funcation with 10     
  34   2            
  35   2            P1 = 0x7D;                                                                      //0x7D = 6
  36   2            delay(10);                                                                      //calling delay funcation with 10     
  37   2            
  38   2            P1 = 0x07;                                                                      //0x07 = 7
  39   2            delay(10);                                                                      //calling delay funcation with 10     
  40   2            
  41   2            P1 = 0x7F;                                                                      //0x7F = 8
  42   2            delay(10);                                                                      //calling delay funcation with 10     
  43   2            
  44   2            P1 = 0x6F;                                                                      //0x6F = 9
  45   2            delay(10);                                                                      //calling delay funcation with 10     
  46   2            
  47   2            P1 = 0x77;                                                                      //0x77 = A
  48   2            delay(10);                                                                      //calling delay funcation with 10     
  49   2            
  50   2            P1 = 0x7C;                                                                      //0x7C = B
  51   2            delay(10);                                                                      //calling delay funcation with 10     
  52   2            
  53   2            P1 = 0x39;                                                                      //0x39 = C
  54   2            delay(10);                                                                      //calling delay funcation with 10     
C51 COMPILER V9.59.0.0   7_SEGMENT_DISPLAY                                                 11/18/2023 12:31:51 PAGE 2   

  55   2            
  56   2            P1 = 0x5E;                                                                      //0x5E = D
  57   2            delay(10);                                                                      //calling delay funcation with 10     
  58   2            
  59   2            P1 = 0x79;                                                                      //0x79 = E
  60   2            delay(10);                                                                      //calling delay funcation with 10     
  61   2            
  62   2            P1 = 0x71;                                                                      //0x71 = F
  63   2            delay(10);                                                                      //calling delay funcation with 10     
  64   2        }
  65   1      }
  66          
  67          //funcation defination of user defined funcation
  68          void delay(unsigned int time)                                                         //delay funcation with one parameter called time
  69          {
  70   1        unsigned int i,j;                                                                   //decleration of variable inside of funcation
  71   1        for(i = 0; i <= time; i++)                                                          //for loop
  72   1        {
  73   2          for(j = 0; j <= 10000; j++);                                                      //nested for loop
  74   2        } 
  75   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    138    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
