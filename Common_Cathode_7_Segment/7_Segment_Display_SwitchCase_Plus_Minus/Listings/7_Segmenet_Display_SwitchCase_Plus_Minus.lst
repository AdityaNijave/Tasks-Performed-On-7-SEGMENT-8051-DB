C51 COMPILER V9.59.0.0   7_SEGMENET_DISPLAY_SWITCHCASE_PLUS_MINUS                          11/16/2023 11:10:43 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE 7_SEGMENET_DISPLAY_SWITCHCASE_PLUS_MINUS
OBJECT MODULE PLACED IN .\Objects\7_Segmenet_Display_SwitchCase_Plus_Minus.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE 7_Segmenet_Display_SwitchCase_Plus_Minus.c OPTIMIZE(8,SPEED) BROWSE DEBU
                    -G OBJECTEXTEND PRINT(.\Listings\7_Segmenet_Display_SwitchCase_Plus_Minus.lst) TABS(2) OBJECT(.\Objects\7_Segmenet_Displa
                    -y_SwitchCase_Plus_Minus.obj)

line level    source

   1          
   2          //including required lib's
   3          #include<reg51.h>
   4          
   5          //sbit decleration
   6          sbit plus = P1^0;
   7          sbit minus = P1^1;
   8          
   9          
  10          //forward decleration of user defined funcation
  11          void delay(unsigned int);                                             //delay funcation proto-type
  12          
  13          //main funcation
  14          void main()
  15          {
  16   1        //decleration and initi. of local variables
  17   1        int number = 0;                                                     //number = 0
  18   1        
  19   1        P2 = 0x00;                                                          //all pins of port 2 is active low at start
  20   1        
  21   1        //forever loop
  22   1        while(1)                                                            //or we can use for(;;)
  23   1        {
  24   2              if (plus == 0)                                                //if plus is active low(switch) then,
  25   2              {
  26   3                if (number < 9)                                             //if number is less than 9
  27   3                {
  28   4                  delay(100);                                               //calling delay funcation with 100
  29   4                  number++;                                                 //increment of 1
  30   4                }
  31   3                else if (number == 9)
  32   3                {
  33   4                  delay(100);                                               //calling delay funcation with 100
  34   4                  number = 9;                                               //assign value 9 to number
  35   4                }
  36   3              }
  37   2      
  38   2              else if (minus == 0)                                          //else if minus (switch) is active low then,
  39   2              {
  40   3                if (number > 0)                                             //if number is greater than 0 then,
  41   3                {
  42   4                  delay(100);                                               //calling delay funcation with 100
  43   4                  number--;                                                 //decrement by 1
  44   4                }
  45   3                else if (number == -1)                                      //else if number is equal to -1 then,
  46   3                {
  47   4                  delay(100);                                               //calling delay funcation with 100
  48   4                  number = 0;                                               //assign value 0 to number
  49   4                }
  50   3              }
  51   2              
  52   2          switch (number)                                                   //then current value of number will pass to case using switch-c
             -ase statement
C51 COMPILER V9.59.0.0   7_SEGMENET_DISPLAY_SWITCHCASE_PLUS_MINUS                          11/16/2023 11:10:43 PAGE 2   

  53   2          {
  54   3            case 0:
  55   3              P2 = 0x3F;                                                   //0
  56   3              delay(4);                                                    //calling delay funcation with 4
  57   3              break;
  58   3            
  59   3            case 1:
  60   3              P2 = 0x06;                                                   //1
  61   3              delay(4);                                                    //calling delay funcation with 4
  62   3              break;
  63   3            
  64   3            case 2:
  65   3              P2 = 0x5B;                                                   //2
  66   3              delay(4);                                                    //calling delay funcation with 4
  67   3              break;
  68   3            
  69   3            case 3:
  70   3              P2 = 0x4F;                                                   //3
  71   3              delay(4);                                                    //calling delay funcation with 4
  72   3              break;
  73   3              
  74   3            case 4:
  75   3              P2 = 0x66;                                                   //4
  76   3              delay(4);                                                    //calling delay funcation with 4
  77   3              break;
  78   3            
  79   3            case 5:
  80   3              P2 = 0x6D;                                                   //5
  81   3              delay(4);                                                    //calling delay funcation with 4
  82   3              break;
  83   3            
  84   3            case 6:
  85   3              P2 = 0x7D;                                                   //6
  86   3              delay(4);                                                    //calling delay funcation with 4
  87   3              break;
  88   3            
  89   3            case 7:
  90   3              P2 = 0x07;                                                   //7
  91   3              delay(4);                                                    //calling delay funcation with 4
  92   3              break;
  93   3            
  94   3            case 8:
  95   3              P2 = 0x7F;                                                   //8
  96   3              delay(4);                                                    //calling delay funcation with 4
  97   3              break;
  98   3            
  99   3            case 9:
 100   3              P2 = 0x6F;                                                   //9
 101   3              delay(4);                                                    //calling delay funcation with 4
 102   3              break;
 103   3          }
 104   2        }
 105   1      }
 106          
 107          //funcation defination of user defined funcation
 108          void delay(unsigned int time)                                       //delay funcation with one parameter called time
 109          {
 110   1        unsigned int i,j;                                                 //decleration of variables inside the funcation
 111   1        {
 112   2          for(i = 0; i < time; i++)                                       //for loop
 113   2          {
 114   3            for(j = 0; j < 1000; j++);                                    //nested for loop
C51 COMPILER V9.59.0.0   7_SEGMENET_DISPLAY_SWITCHCASE_PLUS_MINUS                          11/16/2023 11:10:43 PAGE 3   

 115   3          }
 116   2        }
 117   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    255    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
